// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T2S.Infra.Data;

namespace T2S.API.Migrations
{
    [DbContext(typeof(T2SContext))]
    [Migration("20210708145536_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("T2S.Domain.ConteinerAggregate.Conteiner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conteiner");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                            Numero = "TEST1234567"
                        },
                        new
                        {
                            Id = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                            Numero = "TEST1234568"
                        });
                });

            modelBuilder.Entity("T2S.Domain.MovimentacaoAggregate.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConteinerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConteinerId");

                    b.ToTable("Movimentacao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be82c97b-f3f3-4eb9-9669-bb54dde45a24"),
                            ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                            DataHoraFim = new DateTime(2021, 7, 8, 11, 55, 34, 565, DateTimeKind.Local).AddTicks(425),
                            DataHoraInicio = new DateTime(2021, 7, 8, 11, 55, 34, 561, DateTimeKind.Local).AddTicks(7745)
                        },
                        new
                        {
                            Id = new Guid("6a08d48c-4d39-4732-a5ba-ac05097f5904"),
                            ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                            DataHoraFim = new DateTime(2021, 7, 8, 11, 55, 34, 575, DateTimeKind.Local).AddTicks(9379),
                            DataHoraInicio = new DateTime(2021, 7, 8, 11, 55, 34, 575, DateTimeKind.Local).AddTicks(9250)
                        },
                        new
                        {
                            Id = new Guid("40b96cba-3edb-49e4-9962-1dfdce2687f1"),
                            ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                            DataHoraFim = new DateTime(2021, 7, 8, 11, 55, 34, 577, DateTimeKind.Local).AddTicks(9286),
                            DataHoraInicio = new DateTime(2021, 7, 8, 11, 55, 34, 577, DateTimeKind.Local).AddTicks(9238)
                        },
                        new
                        {
                            Id = new Guid("912ccc62-3749-47a9-b77d-c7f9a8dccd82"),
                            ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                            DataHoraFim = new DateTime(2021, 7, 8, 11, 55, 34, 578, DateTimeKind.Local).AddTicks(499),
                            DataHoraInicio = new DateTime(2021, 7, 8, 11, 55, 34, 578, DateTimeKind.Local).AddTicks(483)
                        });
                });

            modelBuilder.Entity("T2S.Domain.ConteinerAggregate.Conteiner", b =>
                {
                    b.OwnsOne("T2S.Domain.ConteinerAggregate.Categoria", "Categoria", b1 =>
                        {
                            b1.Property<Guid>("ConteinerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Descricao")
                                .HasColumnName("Categoria")
                                .HasColumnType("TEXT");

                            b1.HasKey("ConteinerId");

                            b1.ToTable("Conteiner");

                            b1.WithOwner()
                                .HasForeignKey("ConteinerId");

                            b1.HasData(
                                new
                                {
                                    ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                                    Descricao = "Importação"
                                },
                                new
                                {
                                    ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                                    Descricao = "Exportação"
                                });
                        });

                    b.OwnsOne("T2S.Domain.ConteinerAggregate.Cliente", "Cliente", b1 =>
                        {
                            b1.Property<Guid>("ConteinerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Nome")
                                .HasColumnName("Cliente")
                                .HasColumnType("TEXT");

                            b1.HasKey("ConteinerId");

                            b1.ToTable("Conteiner");

                            b1.WithOwner()
                                .HasForeignKey("ConteinerId");

                            b1.HasData(
                                new
                                {
                                    ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                                    Nome = "Claudio Marcio"
                                },
                                new
                                {
                                    ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                                    Nome = "João Luiz"
                                });
                        });

                    b.OwnsOne("T2S.Domain.ConteinerAggregate.Status", "Status", b1 =>
                        {
                            b1.Property<Guid>("ConteinerId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Descricao")
                                .HasColumnName("Status")
                                .HasColumnType("TEXT");

                            b1.HasKey("ConteinerId");

                            b1.ToTable("Conteiner");

                            b1.WithOwner()
                                .HasForeignKey("ConteinerId");

                            b1.HasData(
                                new
                                {
                                    ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                                    Descricao = "Cheio"
                                },
                                new
                                {
                                    ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                                    Descricao = "Vazio"
                                });
                        });

                    b.OwnsOne("T2S.Domain.ConteinerAggregate.Tipo", "Tipo", b1 =>
                        {
                            b1.Property<Guid>("ConteinerId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Value")
                                .HasColumnName("Tipo")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ConteinerId");

                            b1.ToTable("Conteiner");

                            b1.WithOwner()
                                .HasForeignKey("ConteinerId");

                            b1.HasData(
                                new
                                {
                                    ConteinerId = new Guid("ec55c247-7fbd-4af1-8c7f-ef7a461840ee"),
                                    Value = 40
                                },
                                new
                                {
                                    ConteinerId = new Guid("233caf54-fbc2-432f-8272-d2d8338738d5"),
                                    Value = 20
                                });
                        });
                });

            modelBuilder.Entity("T2S.Domain.MovimentacaoAggregate.Movimentacao", b =>
                {
                    b.HasOne("T2S.Domain.ConteinerAggregate.Conteiner", "Conteiner")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("ConteinerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("T2S.Domain.MovimentacaoAggregate.TipoMovimentacao", "TipoMovimentacao", b1 =>
                        {
                            b1.Property<Guid>("MovimentacaoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Descricao")
                                .HasColumnName("TipoMovimentacao")
                                .HasColumnType("TEXT");

                            b1.HasKey("MovimentacaoId");

                            b1.ToTable("Movimentacao");

                            b1.WithOwner()
                                .HasForeignKey("MovimentacaoId");

                            b1.HasData(
                                new
                                {
                                    MovimentacaoId = new Guid("be82c97b-f3f3-4eb9-9669-bb54dde45a24"),
                                    Descricao = "Embarque"
                                },
                                new
                                {
                                    MovimentacaoId = new Guid("6a08d48c-4d39-4732-a5ba-ac05097f5904"),
                                    Descricao = "Descarga"
                                },
                                new
                                {
                                    MovimentacaoId = new Guid("40b96cba-3edb-49e4-9962-1dfdce2687f1"),
                                    Descricao = "Embarque"
                                },
                                new
                                {
                                    MovimentacaoId = new Guid("912ccc62-3749-47a9-b77d-c7f9a8dccd82"),
                                    Descricao = "Descarga"
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
